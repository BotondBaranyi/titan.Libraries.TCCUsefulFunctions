///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// Copyright Test Competence Center (TCC) ETH 2017                           //
//                                                                           //
// The copyright to the computer  program(s) herein  is the property of TCC. //
// The program(s) may be used and/or copied only with the written permission //
// of TCC or in accordance with  the terms and conditions  stipulated in the //
// agreement/contract under which the program(s) have been supplied          //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////
//
//  File:               TCCRegexp_Example.ttcn
//  Description:        TCC Useful Functions: Regular Expression Functions.
//  Rev:                R32A
//  Prodnr:             CNL 113 472
//  Contact:            http://ttcn.ericsson.se
///////////////////////////////////////////////
module TCCRegexp_Example
{
import from TCCRegexp_Functions all;

type component Test_CT{}


testcase tc_1() runs on Test_CT
  {

    var charstring vl_subject := "a :1 2\nb:1 2\na :2 3";
    var charstring vl_pattern := "a :(\\d+) (\\d+)";

    var integer    vl_groupno := 0;
    var charstring vl_expected := "a :1 2";
    var charstring vl_result := f_pcre_regexp(vl_subject, vl_pattern, vl_groupno);
    log(vl_result);
    if(vl_result == vl_expected) {setverdict(pass)} else {setverdict(fail)}

    var charstring_list vl_expected2 := {"a :1 2", "1", "2"};
    var charstring_list vl_result2 := f_pcre_regexp_list(vl_subject, vl_pattern);
    log(vl_result2)
    if(vl_result2 == vl_expected2) {setverdict(pass)} else {setverdict(fail)}

    var t_list_of_charstring_list vl_expected3 := {{"a :1 2", "1", "2"},{"a :2 3", "2", "3"}};
    var t_list_of_charstring_list vl_result3 := f_pcre_regexp_list_all_matches(vl_subject, vl_pattern);
    log(vl_result3)
    if(vl_result3 == vl_expected3) {setverdict(pass)} else {setverdict(fail)}
  }
control
{
  execute(tc_1()) 
}


}
