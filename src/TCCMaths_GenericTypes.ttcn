///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// Copyright Test Competence Center (TCC) ETH 2007                           //
//                                                                           //
// The copyright to the computer  program(s) herein  is the property of TCC. //
// The program(s) may be used and/or copied only with the written permission //
// of TCC or in accordance with  the terms and conditions  stipulated in the //
// agreement/contract under which the program(s) have been supplied          //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////
//
//  File:               TCCMaths_GenericTypes.ttcn
//  Description:        TCC Useful Functions: Generic Types For Maths
//  Rev:                R25A
//  Prodnr:             CNL 113 472
//  Updated:            2007-11-12
//  Contact:            http://ttcn.ericsson.se
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//  Module: TCCMaths_GenericTypes
//
//  Purpose:
//    This module stores generic types for math functions
//
//  Module Parameters:
//      -
//
//  Module depends on:
//    -
//
//  Current Owner:
//    Akos Pernek (EAKOPER)
//
//  Last Review Date:
//    -
//
///////////////////////////////////////////////////////////////////////////////
module TCCMaths_GenericTypes {

///////////////////////////////////////////////////////////////////////////////
//  Const: pi
//
//  Purpose:
//    Provide the value of pi
//
//  Value:
//    3.1415926535
//
//  Detailed Comments:
//    -
//
///////////////////////////////////////////////////////////////////////////////
const float pi := 3.1415926535

///////////////////////////////////////////////////////////////////////////////
//  Type: VerdictList
//
//  Purpose:
//    List of verdicttype
//
//  Elements:
//    record of *verdicttype*
//
// Detailed Comments:
//    -
//
///////////////////////////////////////////////////////////////////////////////
type record of verdicttype VerdictList;

///////////////////////////////////////////////////////////////////////////////
//  Type: IntegerList
//
//  Purpose:
//    List of integer
//
//  Elements:
//    record of *integer*
//
// Detailed Comments:
//    -
//
///////////////////////////////////////////////////////////////////////////////
type record of integer IntegerList;

///////////////////////////////////////////////////////////////////////////////
//  Type: BooleanList
//
//  Purpose:
//    List of boolean
//
//  Elements:
//    record of *boolean*
//
// Detailed Comments:
//    -
//
///////////////////////////////////////////////////////////////////////////////
type record of boolean BooleanList;

///////////////////////////////////////////////////////////////////////////////
//  Type: FloatList
//
//  Purpose:
//    List of float
//
//  Elements:
//    record of *float*
//
// Detailed Comments:
//    -
//
///////////////////////////////////////////////////////////////////////////////
type record of float FloatList;

///////////////////////////////////////////////////////////////////////////////
//  Type: StringList
//
//  Purpose:
//    List of charstring
//
//  Elements:
//    record of *charstring*
//
// Detailed Comments:
//    -
//
///////////////////////////////////////////////////////////////////////////////
type record of charstring StringList;

///////////////////////////////////////////////////////////////////////////////
//  Type: OctetStringList
//
//  Purpose:
//    List of octetstring
//
//  Elements:
//    record of *octetstring*
//
// Detailed Comments:
//    -
//
///////////////////////////////////////////////////////////////////////////////
type record of octetstring OctetStringList;
}
